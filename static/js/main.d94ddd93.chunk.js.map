{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","query","status","initialState","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","filteredTodos","useMemo","newTodos","completed","title","trim","toLowerCase","includes","length","className","map","id","classNames","onClick","currentTodoActions","selectTodo","TodoFilter","onSubmit","event","preventDefault","value","onChange","filterActions","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","isLoading","setIsLoading","error","setError","user","setUser","useEffect","userId","data","catch","err","message","finally","showUser","showEmpty","showError","href","email","name","App","todosActions","showTodos","showModal","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d94ddd93.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/remove' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/set';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/remove' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/set',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/set':\n      return action.payload;\n    case 'currentTodo/remove':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype RemoveQueryAction = { type: 'filter/removeQuery' };\ntype SetQueryAction = { type: 'filter/setQuery', payload: string };\ntype SetStatusAction = { type: 'filter/setStatus', payload: Status };\n\nconst removeQuery = (): RemoveQueryAction => ({ type: 'filter/removeQuery' });\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: 'filter/setQuery', payload: query,\n});\n\nconst setStatus = (status: Status): SetStatusAction => ({\n  type: 'filter/setStatus', payload: status,\n});\n\nexport const actions = {\n  removeQuery,\n  setQuery,\n  setStatus,\n};\n\ntype State = {\n  query: string,\n  status: Status,\n};\ntype Action = RemoveQueryAction\n| SetQueryAction\n| SetStatusAction;\n\nconst initialState: State = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (\n  state: State = initialState,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'filter/removeQuery':\n      return { ...state, query: '' };\n    case 'filter/setQuery':\n      return { ...state, query: action.payload };\n    case 'filter/setStatus':\n      return { ...state, status: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = { type: 'todos/set'; payload: Todo[] };\n\nconst setTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/set',\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\ntype State = Todo[];\ntype Action = SetTodosAction;\n\nconst todosReducer = (\n  state: State = [],\n  action: Action,\n): Todo[] => {\n  switch (action.type) {\n    case 'todos/set':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const todos = useAppSelector((state) => state.todos);\n  const { query, status } = useAppSelector((state) => state.filter);\n  const currentTodo = useAppSelector((state) => state.currentTodo);\n\n  const filteredTodos = useMemo(() => {\n    let newTodos = [...todos];\n\n    newTodos = newTodos.filter((todo) => {\n      switch (status) {\n        case 'active':\n          return !todo.completed;\n        case 'completed':\n          return todo.completed;\n        default:\n          return true;\n      }\n    });\n\n    newTodos = newTodos.filter((todo) => todo.title.trim().toLowerCase()\n      .includes(query.trim().toLowerCase()));\n\n    return newTodos;\n  }, [todos, query, status]);\n\n  const selectTodo = (todo: Todo) => {\n    dispatch(currentTodoActions.setTodo(todo));\n  };\n\n  return (\n    <>\n      {filteredTodos.length === 0 ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {filteredTodos.map((todo) => (\n              <tr data-cy=\"todo\" key={todo.id}>\n                <td className=\"is-vcentered\">{todo.id}</td>\n\n                {todo.completed ? (\n                  <td className=\"is-vcentered\">\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  </td>\n                ) : (\n                  <td className=\"is-vcentered\" />\n                )}\n\n                <td className=\"is-vcentered is-expanded\">\n                  <p\n                    className={classNames({\n                      'has-text-success': todo.completed,\n                      'has-text-danger': !todo.completed,\n                    })}\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => selectTodo(todo)}\n                  >\n                    <span className=\"icon\">\n                      <i\n                        className={classNames('far', {\n                          'fa-eye-slash': currentTodo?.id === todo.id,\n                          'fa-eye': currentTodo?.id !== todo.id,\n                        })}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { query, status } = useAppSelector(state => state.filter);\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event) => {\n              dispatch(filterActions.setStatus(event.target.value as Status));\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            dispatch(filterActions.setQuery(event.target.value));\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query !== '' && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                dispatch(filterActions.removeQuery());\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(500)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector((state) => state.currentTodo);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string>('');\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getUser(currentTodo?.userId || 0)\n      .then((data) => {\n        setError('');\n        setUser(data);\n      })\n      .catch((err) => {\n        setError(err.message);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [currentTodo?.userId]);\n\n  const showUser = !isLoading && error === '' && user !== null;\n  const showEmpty = !isLoading && error === '' && user === null;\n  const showError = !isLoading && error !== '';\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {currentTodo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                dispatch(currentTodoActions.removeTodo());\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              {showUser && (\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name}\n                </a>\n              )}\n\n              {showEmpty && (\n                <p>User not found</p>\n              )}\n\n              {showError && (\n                <p className=\"has-text-danger\">\n                  {error}\n                </p>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const currentTodo = useAppSelector((state) => state.currentTodo);\n  const dispatch = useAppDispatch();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then((data) => {\n        setError('');\n        dispatch(todosActions.setTodos(data));\n      })\n      .catch((err) => {\n        setError(err.message);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const showTodos = !isLoading && error === '';\n  const showError = !isLoading && error !== '';\n  const showModal = currentTodo !== null;\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n\n              {showTodos && <TodoList />}\n\n              {showError && <p className=\"notification is-warning\">{error}</p>}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showModal && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}